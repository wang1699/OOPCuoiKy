package project;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class GiangVienGUI extends JFrame {
    private JTable table;
    private DefaultTableModel tableModel;
    private String currentMonHoc;
    private String currentGiangVien;

    private final Map<String, Object[][]> duLieuSinhVien = new HashMap<>();
    private final Map<String, String[]> danhSachGiangVien = new HashMap<>();

    public GiangVienGUI() {
        setTitle("Danh sách giảng viên");
        setSize(900, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().setLayout(new BorderLayout(10, 10));

        // ===== DỮ LIỆU GIẢNG VIÊN =====
        danhSachGiangVien.put("GV001", new String[]{"Nguyễn Văn A", "Java"});
        danhSachGiangVien.put("GV002", new String[]{"Trần Thị B", "Python"});
        danhSachGiangVien.put("GV003", new String[]{"Lê Văn C", "SQL"});
        danhSachGiangVien.put("GV004", new String[]{"Phạm Thị D", "Web"});

        // ===== DỮ LIỆU SINH VIÊN =====
        duLieuSinhVien.put("Java", new Object[][]{
                {"SV001", "Nguyễn Văn A", "Java", 8.5, ""},
                {"SV002", "Trần Thị B", "Java", 7.0, ""},
                {"SV003", "Lê Văn C", "Java", 9.0, ""}
        });
        duLieuSinhVien.put("Python", new Object[][]{
                {"SV004", "Phạm Thị D", "Python", 8.0, ""},
                {"SV005", "Hoàng Văn E", "Python", 6.5, ""}
        });
        duLieuSinhVien.put("SQL", new Object[][]{
                {"SV006", "Đỗ Thị F", "SQL", 7.5, ""},
                {"SV007", "Nguyễn Văn G", "SQL", 9.0, ""}
        });
        duLieuSinhVien.put("Web", new Object[][]{
                {"SV008", "Trần Thị H", "Web", 6.0, ""},
                {"SV009", "Phạm Văn I", "Web", 8.2, ""}
        });

        // ===== BẢNG GIẢNG VIÊN =====
        String[] columnNames = {"ID", "Tên Giảng viên", "Môn học"};
        tableModel = new DefaultTableModel(columnNames, 0);
        table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);
        getContentPane().add(scrollPane, BorderLayout.CENTER);
        loadDanhSachGiangVien();

        // ===== PANEL NÚT BÊN DƯỚI =====
        JPanel bottomPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        JButton btnHienSinhVien = new JButton("Hiển thị danh sách sinh viên");
        bottomPanel.add(btnHienSinhVien);
        getContentPane().add(bottomPanel, BorderLayout.SOUTH);

        // ===== SỰ KIỆN =====
        btnHienSinhVien.addActionListener(e -> {
            JPanel panel = new JPanel(new GridLayout(2, 2));
            JTextField txtID = new JTextField();
            JTextField txtMon = new JTextField();

            panel.add(new JLabel("Nhập ID Giảng viên:"));
            panel.add(txtID);
            panel.add(new JLabel("Nhập Môn học:"));
            panel.add(txtMon);

            int result = JOptionPane.showConfirmDialog(this, panel, "Thông tin lớp", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION) {
                String id = txtID.getText().trim();
                String mon = txtMon.getText().trim();
                if (danhSachGiangVien.containsKey(id) && danhSachGiangVien.get(id)[1].equalsIgnoreCase(mon)) {
                    currentGiangVien = danhSachGiangVien.get(id)[0];
                    currentMonHoc = mon;
                    moBangQuanLySinhVien();
                } else {
                    JOptionPane.showMessageDialog(this, "ID giảng viên hoặc môn học không hợp lệ.");
                }
            }
        });
    }

    private void loadDanhSachGiangVien() {
        tableModel.setRowCount(0);
        for (Map.Entry<String, String[]> entry : danhSachGiangVien.entrySet()) {
            tableModel.addRow(new Object[]{entry.getKey(), entry.getValue()[0], entry.getValue()[1]});
        }
    }

    private void moBangQuanLySinhVien() {
        JFrame svFrame = new JFrame("Quản lý sinh viên - Giảng viên: " + currentGiangVien + " - Môn: " + currentMonHoc);
        svFrame.setSize(900, 500);
        svFrame.setLocationRelativeTo(this);
        svFrame.setLayout(new BorderLayout());
        GiangVienGUI.this.setVisible(false);  // Ẩn giao diện chính khi mở quản lý sinh viên


        String[] columns = {"Mã SV", "Tên SV", "Môn học", "Điểm", "Trạng thái"};
        DefaultTableModel svModel = new DefaultTableModel(columns, 0);
        JTable svTable = new JTable(svModel);

        Object[][] data = duLieuSinhVien.get(currentMonHoc);
        for (Object[] row : data) {
            svModel.addRow(row);
        }

        JScrollPane scrollPane = new JScrollPane(svTable);
        svFrame.add(scrollPane, BorderLayout.CENTER);

        // ===== PANEL CHỨC NĂNG =====
        JPanel buttonPanel = new JPanel(new FlowLayout());

        JButton btnDiemDanh = new JButton("Điểm danh");
        JButton btnNhapDiem = new JButton("Nhập điểm");

        buttonPanel.add(btnDiemDanh);
        buttonPanel.add(btnNhapDiem);
        svFrame.add(buttonPanel, BorderLayout.SOUTH);

        // ===== SỰ KIỆN: ĐIỂM DANH =====
        btnDiemDanh.addActionListener(e -> {
            int row = svTable.getSelectedRow();
            if (row != -1) {
                String ten = (String) svModel.getValueAt(row, 1);
                int confirm = JOptionPane.showConfirmDialog(svFrame,
                        "Sinh viên: " + ten + "\nCó mặt hôm nay không?",
                        "Điểm danh", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    svModel.setValueAt("Có mặt", row, 4);
                } else if (confirm == JOptionPane.NO_OPTION) {
                    svModel.setValueAt("Vắng mặt", row, 4);
                }
            } else {
                JOptionPane.showMessageDialog(svFrame, "Vui lòng chọn sinh viên để điểm danh.");
            }
        });

        // ===== SỰ KIỆN: NHẬP ĐIỂM =====
        btnNhapDiem.addActionListener(e -> {
            int row = svTable.getSelectedRow();
            if (row != -1) {
                String ten = (String) svModel.getValueAt(row, 1);
                String input = JOptionPane.showInputDialog(svFrame, "Nhập điểm cho " + ten + ":");
                try {
                    double diem = Double.parseDouble(input);
                    svModel.setValueAt(diem, row, 3);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(svFrame, "Vui lòng nhập đúng định dạng điểm số.");
                }
            } else {
                JOptionPane.showMessageDialog(svFrame, "Vui lòng chọn sinh viên để nhập điểm.");
            }
        });

        svFrame.setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new GiangVienGUI().setVisible(true));
    }
}
